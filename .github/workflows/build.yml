name: Build
on:
  release:
    types:
      - released
      - prereleased
  push:
jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install build dependencies
        run: |
          python -m pip install wheel --user
      - name: Build binary wheel and source tarball
        run: |
          python setup.py sdist bdist_wheel
      - name: Upload build results
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
  build-docs:
    name: Build documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
      - uses: actions/upload-artifact@v1
        with:
          name: docs
          path: docs/_build/html/
  unit-test:
    name: Unit Tests
    needs: build
    strategy:
      matrix:
        python: ["2.7", "3.8"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Download arduino-cli
        run: |
          wget https://github.com/arduino/arduino-cli/releases/download/0.23.0/arduino-cli_0.23.0_Linux_64bit.tar.gz
          tar xzf arduino-cli_0.23.0_Linux_64bit.tar.gz
          rm arduino-cli_0.23.0_Linux_64bit.tar.gz
      - name: Install test dependencies
        run: |
          pip install pytest
      - name: Run tests
        run: |
          pytest
  deploy-docs:
    name: Deploy docs to GitHub pages
    if: github.ref == 'refs/heads/master'
    needs:
      - unit-test
      - build-docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download built documentation
        uses: actions/download-artifact@v1
        with:
          name: docs
          path: docs/_build/html/
      - name: Disables jekyll
        run: |
          touch docs/_build/html/.nojekyll
      - name: Publish on GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: docs/_build/html
          clean: true
  deploy-on-test-pypi:
    name: Deploy on Test PyPI
    if: github.event_name == 'release'
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Download build results
        uses: actions/download-artifact@v1
        with:
          name: dist
          path: dist
      - name: Publish to index
        uses: pypa/gh-action-pypi-publish@master
        continue-on-error: true
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
  deploy-on-pypi:
    name: Deploy on PyPI
    if: github.event_name == 'release'
    needs: deploy-on-test-pypi
    runs-on: ubuntu-latest
    steps:
      - name: Download build results
        uses: actions/download-artifact@v1
        with:
          name: dist
          path: dist
      - name: Publish to index
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
